Turbo_M:
Trains and gp-samples each TR every cycle.

Use Turbo_M but:
New TR's go into unsampled space
Use UCB to pick which TR to train and GP-sample

-------
Their multi-armed bandit:

refer to other txt file

----------------
Need to do:

figure out a way to match data to a TR:
make a class, and then in TurboO make an array of the TR classes

Make a run counter for TR
Make a fX_i.min() counter for TR 

--------------
UCB formula:

fX_i.min() stores the min for each TR
currently there is no time element to succ/fail, only net
Use succ/failcout to do improvement calculations
Prioritize TR length in calculations, scale by log2

v(TR_i) = -y_{i}^* + alpha * (TBD) + expl_weight * sqrt(TR runs/ # evals)

-------
For algorithm setup, use LHS to produce an abundance of spread out points on 
independent hyper-planes and then pull from those for each TR creation. This 
list of points can be seen as a  stack of regions because they wont be reused,
 and LHS makes sure they're independent